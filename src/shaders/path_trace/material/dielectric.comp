
void	reflected_dielectric_color(inout vec3 rd, hit_record hit)
{
	vec3	micro_normal;

	if (hit.mat_val.roughness > 0.0)
		micro_normal = ggx_sample_hemisphere(hit.normal, hit.mat_val.roughness);
	else
		micro_normal = hit.normal;
	rd = normalize(rd - micro_normal * 2 * dot(rd, micro_normal));
}

void	dielectric_mat(inout vec3 rd, hit_record hit, inout vec3 power, inout vec3 accumulation)
{
	if (hit.mat_val.ior > 0)
	{
		if (get_reflect_value(rd, hit) >= rand()
			&& hit.mat_val.ior != 1.0)
			reflected_dielectric_color(rd, hit);
		else
		{
			if (hit.mat_val.transmission == 1.0)
				refracted_ray(rd, hit, power);
			else if (hit.mat_val.transmission == 0.0)
				material_default(rd, hit, power, accumulation);
			else
			{
				if (hit.mat_val.transmission < rand())
					material_default(rd, hit, power, accumulation);
				else
					refracted_ray(rd, hit, power);
			}
		}
	}
	else
		material_default(rd, hit, power, accumulation);
}
