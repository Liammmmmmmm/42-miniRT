

vec3	get_tex_color_skybox(int tex_index, float u, float v)
{
	int	a;
	int	b;

	if (tex_ti[tex_index].type == 1) // HDR
	{
		return (sample_hdr_texture(tex_index, vec2(u, v), textures_data[tex_index].exposure + ambiant.ratio - 1));
	}
	else if (tex_ti[tex_index].type == 0) // Image
	{
		return (sample_texture(tex_index, vec2(u, v)).xyz * ambiant.ratio);
	}
	else if (tex_ti[tex_index].type == 3 || tex_ti[tex_index].type == 4) // Checker local
	{
		a = int(floor(u * checkers[tex_ti[tex_index].indice].scale));
		b = int(floor(v * checkers[tex_ti[tex_index].indice].scale));
		if ((a + b) % 2 == 0)
			return (checkers[tex_ti[tex_index].indice].c1);
		return (checkers[tex_ti[tex_index].indice].c2);
	}
	return (vec3(0.0));
}

vec3	get_background_tex_value(vec3 rd, int tex_index)
{
	float	u = 0.5 - atan(rd.z, rd.x) / (2.0 * PI);
	float	v = 0.5 + asin(rd.y) / PI;

	return (get_tex_color_skybox(tex_index, u, v));
}

vec3	get_background_color(vec3 rd)
{
	if (ambiant.skybox_tex_index == -1)
	{
		return (ambiant.skybox_color * ambiant.ratio);
	}
	else
	{
		return (get_background_tex_value(rd, ambiant.skybox_tex_index));
	}
}

vec3	add_skybox(vec3 rd, vec3 power, vec3 accumulation)
{
	return accumulation + power * clamp(get_background_color(rd), 0, 16000000);
}